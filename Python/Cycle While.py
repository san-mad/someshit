 #Алгоритм — это последовательность действий, которая приводит к ожидаемому результату.

# Представим, что у нас есть книга, и мы хотим найти в ней конкретную фразу. 
# Саму фразу мы помним, но не знаем, на какой она странице.
# Нам придется последовательно просматривать страницы до тех пор, пока не найдем нужную. Э
# тот процесс и называется алгоритмом.
# Алгоритм включает логические проверки и перебор страниц.
# Количество страниц, которое придется посмотреть, заранее неизвестно. 
# Но сам процесс просмотра повторяется одинаковым образом. Чтобы выполнять повторяющиеся действия, нужны циклы. Каждый повтор называется итерацией.

#Напишем функцию с простым циклом, который будет n раз выводить на экран строку 'Hello!':

'''

def print_hello(n):
    counter = 0
    while counter < n:
        print('Hello!')
        counter = counter + 1

print_hello(3)




#Теперь проанализируем пример функции с циклом, который выводит на экран числа от одного до числа-аргумента:

def print_numbers(last_number):
    # i сокращение от index (порядковый номер)
    # используется по общему соглашению во множестве языков
    # как счетчик цикла
    i = 1
    while i <= last_number:
        print(i)
        i = i + 1
    print('finished!')

print_numbers(5)

'''





'''

Разберем работу этого кода для вызова print_numbers(3):

# Инициализируется i
i = 1

# Предикат возвращает true, поэтому выполняется тело цикла
while 1 <= 3
# print(1)
# i = 1 + 1

# Закончилось тело цикла, поэтому происходит возврат в начало
while 2 <= 3
# print(2)
# i = 2 + 1

# Закончилось тело цикла, поэтому происходит возврат в начало
while 3 <= 3
# print(3)
# i = 3 + 1

# Предикат возвращает false, поэтому выполнение переходит за цикл
while 4 <= 3

# print('finished!');
# На этом этапе i равен 4, но он нам уже не нужен
# Функция завершается


'''




'''

Цикл while состоит из трех элементов:

    Ключевое слово while
    Предикат — условие, которое указывается после while и вычисляется на каждой итерации
    Блок кода — тело цикла


'''

'''

Обычно задача сводится к введению переменной — счетчику цикла. Сначала он инициализируется — ему задается начальное значение. 
В нашем примере это строчка i = 1. Затем в условии цикла проверяется, не достиг ли счетчик своего предельного значения.

'''

"""while True:
    print('This will run forever!')  # Этот цикл будет выполняться бесконечно
    """
    
    

def print_numbers(last_number):
    i = last_number
    while i >= 1:
        print(i)
        i -= 1

print_numbers(5)

'''
Другой варинат
def print_numbers(last_number):
    i = last_number
    while i > 0:
        print(i)
        i = i - 1
    print("finished!")'''